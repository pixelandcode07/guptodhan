import { z } from 'zod';

// Create vendor product validation
export const createVendorProductValidationSchema = z.object({
  productId: z.string().min(1, { message: 'Product ID is required.' }),
  productTitle: z.string().min(1, { message: 'Product title is required.' }),
  shortDescription: z.string().min(1, { message: 'Short description is required.' }).max(255, { message: 'Short description cannot exceed 255 characters.' }),
  fullDescription: z.string().min(1, { message: 'Full description is required.' }),
  specification: z.string().min(1, { message: 'Specification is required.' }),
  warrantyPolicy: z.string().min(1, { message: 'Warranty policy is required.' }),
  productTag: z.array(z.string()).optional(),
  videoUrl: z.string().optional(),
  photoGallery: z.array(z.string()).min(1, { message: 'At least one photo is required.' }),
  thumbnailImage: z.string().min(1, { message: 'Thumbnail image is required.' }),
  productPrice: z.number({ invalid_type_error: 'Product price must be a number.' }),
  discountPrice: z.number().optional(),
  stock: z.number().optional(),
  sku: z.string().optional(),
  rewardPoints: z.number().optional(),
  category: z.string({ required_error: 'Category ID is required.' }),
  subCategory: z.string().optional(),
  childCategory: z.string().optional(),
  brand: z.string().optional(),
  productModel: z.string().optional(),
  flag: z.string().optional(),
  warranty: z.string().min(1, { message: 'Warranty is required.' }),
  weightUnit: z.string().optional(),
  offerDeadline: z.date().optional(),
  metaTitle: z.string().optional(),
  metaKeyword: z.string().optional(),
  metaDescription: z.string().optional(),
  status: z.enum(['active', 'inactive']).optional(),
});

// Update vendor product validation
export const updateVendorProductValidationSchema = z.object({
  productId: z.string().optional(),
  productTitle: z.string().optional(),
  shortDescription: z.string().max(255).optional(),
  fullDescription: z.string().optional(),
  specification: z.string().optional(),
  warrantyPolicy: z.string().optional(),
  productTag: z.array(z.string()).optional(),
  videoUrl: z.string().optional(),
  photoGallery: z.array(z.string()).optional(),
  thumbnailImage: z.string().optional(),
  productPrice: z.number().optional(),
  discountPrice: z.number().optional(),
  stock: z.number().optional(),
  sku: z.string().optional(),
  rewardPoints: z.number().optional(),
  category: z.string().optional(),
  subCategory: z.string().optional(),
  childCategory: z.string().optional(),
  brand: z.string().optional(),
  productModel: z.string().optional(),
  flag: z.string().optional(),
  warranty: z.string().optional(),
  weightUnit: z.string().optional(),
  offerDeadline: z.date().optional(),
  metaTitle: z.string().optional(),
  metaKeyword: z.string().optional(),
  metaDescription: z.string().optional(),
  status: z.enum(['active', 'inactive']).optional(),
});
